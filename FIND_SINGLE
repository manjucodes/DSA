//Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]

Output: 1
//

//mySolution


var singleNumber = function (nums) {
    let singleNumber 
    if (nums.length > 1) {
        const mySet = new Set();
        //const nums1 = [...mySet];
        for (let i = 0; i < nums.length; i++) {
            if(mySet.has(nums[i])){
                mySet.delete(nums[i])
            } else {
              mySet.add(nums[i])
            }
        }
        singleNumber = [...mySet][0]
    } else {
        singleNumber = nums[0]
    }

    return singleNumber;
};
